{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_jsx","className","concat","mode","children","_jsxs","href","title","type","id","onClick","toggleMode","role","htmlfor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","length","prototype","PropTypes","string","isRequired","Abouttext","defaultProps","tilte","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","background","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.007aca22.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.Abouttext}</a>\r\n          </li>*/}\r\n        </ul>  \r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark' : 'light'}`}>\r\n           <input className=\"form-check-input\"  onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n           <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">enable darkmode</label>\r\n</div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\nNavbar.prototype={ title: PropTypes.string.isRequired,\r\n         Abouttext : PropTypes.string.isRequired\r\n        }\r\nNavbar.defaultProps ={\r\n    tilte:  'set title here',\r\n    Abouttext: 'About'\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    // setText(\"you  hava click on handleupClick\")\r\n    props.showAlert(\"Converted to upper case!\", \"success\");\r\n  };\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    // setText(\"you  hava click on handleupClick\")\r\n    props.showAlert(\"Converted to lower case!\", \"success\");\r\n  };\r\n  const handleClearClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    // setText(\"you  hava click on handleupClick\")\r\n    props.showAlert(\"Cleared text!\", \"success\");\r\n  };\r\n\r\n  const ReverseText = () => {\r\n    setText(text.split(\"\").reverse().join(\"\"));\r\n    props.showAlert(\"Reverse text!\", \"success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change \");\r\n    setText(event.target.value);\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  // text = \"next text \"; // wrong way to use\r\n  // setText ( \"new text\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Convert to uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleLoClick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={handleClearClick}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary  mx-2\" onClick={ReverseText}>\r\n          Reverse text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-2\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        <h1>Your Text Summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes Reading Times</p>\r\n        <p>{0.0066 * text.split(\" \").length} Minutes Speaking Time</p>\r\n\r\n        <h2>Preview</h2>\r\n        <p>{text.length > 0 ? text : \"Enter something in box to preview\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() +  lower.slice(1); \r\n    }\r\n  return (\r\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n       <strong> {capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n       \r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","import \"./App.css\";\n// import About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\nimport React, { useState } from \"react\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // wether dark mode in enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.background = \"#042743\";\n      showAlert(\"dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      //  setInterval(() => {\n      //   document.title = \"TextUtils is Amazing\";\n      //  }, 2000);\n      //  setInterval(() => {\n      //   document.title = \"install TextUtils now \";\n      //  }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.background = \"white\";\n      showAlert(\"light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/*<Navbar title = \"Textutil\" About Textutils = \"About Text utils\"/>*/}\n      {/*<Navbar/>*/}\n      {/* <Router> */}\n        <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\" container my-3 \">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />} />\n            <Route */}\n             {/* exact  path=\"/\"\n              element={ */}\n                <TextForm\n                  showAlert={showAlert}\n                  heading=\"enter the text to enalyze below\"\n                  mode={mode}\n                />\n              {/* }\n            /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n\n      {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}